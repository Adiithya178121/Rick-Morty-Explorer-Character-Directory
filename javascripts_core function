// Global State Management
let currentPage = 1;
let totalPages = 0;
let allSpecies = new Set(['Human', 'Alien', 'Robot']);

// DOM Initialization
const characterGrid = document.getElementById('character-grid');
const searchInput = document.getElementById('search');
// ... other element references ...

// Event Listeners Setup
function setupEventListeners() {
    // Debounced search input
    searchInput.addEventListener('input', () => {
        clearTimeout(debounceTimer);
        debounceTimer = setTimeout(() => {
            currentPage = 1;
            fetchCharacters();
        }, 300);
    });
    // ... other event listeners ...
}

// API Data Fetching
async function fetchCharacters() {
    const params = new URLSearchParams({
        page: currentPage,
        ...(searchInput.value && {name: searchInput.value}),
        ...(statusFilter.value && {status: statusFilter.value}),
        ...(speciesFilter.value && {species: speciesFilter.value})
    });

    try {
        const response = await fetch(`https://rickandmortyapi.com/api/character/?${params}`);
        const data = await response.json();
        renderCharacters(data.results);
        updatePagination(data.info);
    } catch (error) {
        handleErrors();
    }
}

// Dynamic UI Rendering
function renderCharacters(characters) {
    characterGrid.innerHTML = characters.map(character => `
        <div class="character-card" onclick="openModal(${JSON.stringify(character).replace(/"/g, '&quot;')})">
            <img src="${character.image}" alt="${character.name}">
            <h3>${character.name}</h3>
            <span class="status ${character.status.toLowerCase()}">${character.status}</span>
            ${character.episode.length > 30 ? '<span class="veteran-badge">Veteran</span>' : ''}
        </div>
    `).join('');
}
